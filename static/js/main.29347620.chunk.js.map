{"version":3,"sources":["Board.js","App.js","reportWebVitals.js","index.js"],"names":["Board","state","handleOnClick","map","button","index","value","className","onClick","App","event","counter","target","setState","showBoardAndWinner","array","lines","i","length","a","b","c","console","log","options","restartGame","button1","button2","button3","button4","button5","button6","button7","button8","button9","id","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29347620.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Board = ({ state, handleOnClick }) => {\r\n    const array = ['button1', 'button2', 'button3', 'button4', 'button5', 'button6', 'button7', 'button8', 'button9']\r\n    return(\r\n        <div>\r\n          {\r\n            array.map((button, index) => {\r\n              if(!state[button]) {\r\n                return <button key={index} value={button} className='button' onClick={handleOnClick}>Â·</button>\r\n              } else if(state[button] === 'X') {\r\n                return <button key={index} value={button} className='button' onClick={handleOnClick}>X</button>\r\n              } else if(state[button] === 'O') {\r\n                return <button key={index} value={button} className='button' onClick={handleOnClick}>O</button>\r\n              }\r\n            })\r\n          }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Board","import React from \"react\";\nimport './App.css';\nimport Board from './Board'\n\nclass App extends React.Component{\n  constructor() {\n    super()\n    this.state = {\n      button1: '',\n      button2: '',\n      button3: '',\n      button4: '',\n      button5: '',\n      button6: '',\n      button7: '',\n      button8: '',\n      button9: '',\n      counter: 0\n    }\n  }\n\n  handleOnClick = (event) => {\n    const { counter } = this.state\n    if(!this.state[event.target.value] && counter % 2 === 0 && counter < 9) {\n      this.setState({\n        [event.target.value]: 'X',\n        counter: counter + 1\n      })\n    } else if(!this.state[event.target.value] && counter % 2 === 1 && counter < 9) {\n      this.setState({\n        [event.target.value]: 'O',\n        counter: counter + 1\n      })\n    }\n  }\n\n\n  showBoardAndWinner = () => {\n    let array = ['button1', 'button2', 'button3', 'button4', 'button5', 'button6', 'button7', 'button8', 'button9']\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]\n    for (let i = 0; i < lines.length; i++) {\n      let [a, b, c] = lines[i];\n      console.log('cdsd')\n      let options = ['X', 'O']\n      for (let index = 0; index < options.length; index++) {\n        if (this.state[array[a]] === options[index] && this.state[array[a]] === this.state[array[b]] && this.state[array[b]] === this.state[array[c]] ) {\n            return(\n                <p className='winnerText'>winner is {options[index]}</p>\n            )\n        } \n      }\n    }\n\n    if(this.state.counter === 9) {\n        return(\n            <p className='winnerText'>Friendship won</p>\n        )\n    }\n    \n    return(\n        <Board state={this.state} handleOnClick={this.handleOnClick} />\n    )\n\n    \n  }\n\n  restartGame = () => {\n    this.setState({\n      button1: '',\n      button2: '',\n      button3: '',\n      button4: '',\n      button5: '',\n      button6: '',\n      button7: '',\n      button8: '',\n      button9: '',\n      counter: 0\n    })\n  }\n\n  render() {\n    return (\n      <div id='app' className='app'>\n        <h1 className='header'>Here you can play Tic Tac Toe</h1>\n        {this.showBoardAndWinner()}\n        <br />\n        <button className='restartButton' onClick={this.restartGame}>restart</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}