{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","handleOnClick","event","counter","state","arr","index","length","target","value","displayWhoWon","setState","winner","array","lines","i","a","b","c","options","restartGame","button1","button2","button3","button4","button5","button6","button7","button8","button9","id","className","map","button","onClick","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04a85007.chunk.js","sourcesContent":["import React from \"react\";\nimport './App.css';\n\nclass App extends React.Component{\n  constructor() {\n    super()\n    this.state = {\n      button1: '',\n      button2: '',\n      button3: '',\n      button4: '',\n      button5: '',\n      button6: '',\n      button7: '',\n      button8: '',\n      button9: '',\n      counter: 0,\n      displayWhoWon: false,\n      winner: ''\n    }\n  }\n\n  handleOnClick = (event) => {\n    const { counter } = this.state\n    const arr = ['X', 'O'] \n    for (let index = 0; index < arr.length; index++) {\n      if(!this.state[event.target.value] && counter % 2 === index && counter < 9 && !this.state.displayWhoWon) {\n        this.setState({\n          [event.target.value]: arr[index],\n          counter: counter + 1\n        })\n        this.winner()\n      }\n    }\n  }\n\n  winner = () => {\n    let array = ['button1', 'button2', 'button3', 'button4', 'button5', 'button6', 'button7', 'button8', 'button9']\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      let options = ['X', 'O']\n      for (let index = 0; index < options.length; index++) {\n        if (this.state[array[a]] === options[index] && this.state[array[a]] === this.state[array[b]] && this.state[array[b]] === this.state[array[c]] ) {\n          this.setState({\n            displayWhoWon: true,\n            winner: options[index]\n          })\n        }\n      }\n    }\n\n    if(this.state.counter === 8 && !this.state.displayWhoWon) {\n      this.setState({\n          displayWhoWon: true,\n          winner: \"nobody\"\n      })\n    }\n  }\n\n  restartGame = () => {\n    this.setState({\n      button1: '',\n      button2: '',\n      button3: '',\n      button4: '',\n      button5: '',\n      button6: '',\n      button7: '',\n      button8: '',\n      button9: '',\n      counter: 0,\n      displayWhoWon: false,\n      winner: ''\n    })\n  }\n\n  render() {\n    let array = ['button1', 'button2', 'button3', 'button4', 'button5', 'button6', 'button7', 'button8', 'button9']\n    return (\n      <div id='app' className='app'>\n        <h1>Here you can play Tic Tac Toe</h1>\n        {\n          array.map((button, index) => {\n            if(!this.state[button]) {\n              return <button key={index} value={button} className='button' onClick={this.handleOnClick}>Â·</button>\n            } else if(this.state[button] === 'X') {\n              return <button key={index} value={button} className='button' onClick={this.handleOnClick}>X</button>\n            } else if(this.state[button] === 'O') {\n              return <button key={index} value={button} className='button' onClick={this.handleOnClick}>O</button>\n            }\n          })\n        }\n        {\n          this.state.displayWhoWon ? <h1 className='winnerText'>winner is {this.state.winner}</h1> : <p></p>\n        }\n        <br />\n        <button className='restartButton' onClick={this.restartGame}>restart</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}