{"version":3,"sources":["Winner.js","App.js","reportWebVitals.js","index.js"],"names":["Winner","state","array","lines","i","length","a","b","c","options","index","className","counter","App","handleOnClick","event","target","value","setState","restartGame","button1","button2","button3","button4","button5","button6","button7","button8","button9","id","map","button","onClick","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fc0f0c7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Winner = ({ state }) => {\r\n    let array = ['button1', 'button2', 'button3', 'button4', 'button5', 'button6', 'button7', 'button8', 'button9']\r\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]\r\n    for (let i = 0; i < lines.length; i++) {\r\n      let [a, b, c] = lines[i];\r\n      let options = ['X', 'O']\r\n      for (let index = 0; index < options.length; index++) {\r\n        if (state[array[a]] === options[index] && state[array[a]] === state[array[b]] && state[array[b]] === state[array[c]] ) {\r\n            return(\r\n                <p className='winnerText'>winner is {options[index]}</p>\r\n            )\r\n        } \r\n      }\r\n    }\r\n\r\n    if(state.counter === 9) {\r\n        return(\r\n            <p className='winnerText'>Friendship won</p>\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <p></p>\r\n    )\r\n\r\n    \r\n}\r\n\r\n\r\nexport default Winner","import React from \"react\";\nimport './App.css';\nimport Winner from './Winner'\n\nclass App extends React.Component{\n  constructor() {\n    super()\n    this.state = {\n      button1: '',\n      button2: '',\n      button3: '',\n      button4: '',\n      button5: '',\n      button6: '',\n      button7: '',\n      button8: '',\n      button9: '',\n      counter: 0\n    }\n  }\n\n  // winner = () => {\n  //   let array = ['button1', 'button2', 'button3', 'button4', 'button5', 'button6', 'button7', 'button8', 'button9']\n  //   const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]\n  //   for (let i = 0; i < lines.length; i++) {\n  //     const [a, b, c] = lines[i];\n  //     let options = ['X', 'O']\n  //     for (let index = 0; index < options.length; index++) {\n  //       if (this.state[array[a]] === options[index] && this.state[array[a]] === this.state[array[b]] && this.state[array[b]] === this.state[array[c]] ) {\n  //         this.setState({\n  //           displayWhoWon: true,\n  //           winner: options[index]\n  //         })\n  //       }\n  //     }\n  //   }\n\n  //   if(this.state.counter === 8 && !this.state.displayWhoWon) {\n  //     this.setState({\n  //         displayWhoWon: true,\n  //         winner: \"nobody\"\n  //     })\n  //   }\n  // }\n\n  handleOnClick = (event) => {\n    const { counter } = this.state\n    if(!this.state[event.target.value] && counter % 2 === 0 && counter < 9) {\n      this.setState({\n        [event.target.value]: 'X',\n        counter: counter + 1\n      })\n    } else if(!this.state[event.target.value] && counter % 2 === 1 && counter < 9) {\n      this.setState({\n        [event.target.value]: 'O',\n        counter: counter + 1\n      })\n    }\n  }\n\n  restartGame = () => {\n    this.setState({\n      button1: '',\n      button2: '',\n      button3: '',\n      button4: '',\n      button5: '',\n      button6: '',\n      button7: '',\n      button8: '',\n      button9: '',\n      counter: 0\n    })\n  }\n\n  render() {\n    let array = ['button1', 'button2', 'button3', 'button4', 'button5', 'button6', 'button7', 'button8', 'button9']\n    return (\n      <div id='app' className='app'>\n        <h1>Here you can play Tic Tac Toe</h1>\n        {\n          array.map((button, index) => {\n            if(!this.state[button]) {\n              return <button key={index} value={button} className='button' onClick={this.handleOnClick}>Â·</button>\n            } else if(this.state[button] === 'X') {\n              return <button key={index} value={button} className='button' onClick={this.handleOnClick}>X</button>\n            } else if(this.state[button] === 'O') {\n              return <button key={index} value={button} className='button' onClick={this.handleOnClick}>O</button>\n            }\n          })\n        }\n        <Winner state={this.state} />\n        <br />\n        <button className='restartButton' onClick={this.restartGame}>restart</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}